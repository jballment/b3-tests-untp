{
  "name": "ORCHARD SUPPLY CHAIN TRACEABILITY",
  "styles": {
    "primaryColor": "rgb(35, 138, 186)",
    "secondaryColor": "black",
    "tertiaryColor": "black"
  },
  "generalFeatures": [
    {
      "name": "General features",
      "type": "",
      "styles": {
        "primaryColor": "rgb(35, 138, 186)",
        "secondaryColor": "black",
        "tertiaryColor": "black"
      },
      "features": []
    }
  ],
  "apps": [
    {
      "name": "Orchard",
      "type": "producer",
      "assets": {
        "logo": "logo.webp",
        "brandTitle": "Orchard"
      },
      "styles": {
        "primaryColor": "#b5651d",
        "secondaryColor": "#391561",
        "tertiaryColor": "#ffffff"
      },
      "features": [
        {
          "name": "Issue Digital Product Passport",
          "id": "produce_product",
          "components": [
            {
              "name": "JsonForm",
              "type": "EntryData",
              "props": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "array",
                      "readOnly": true,
                      "const": [
                        "Product",
                        "Entity"
                      ],
                      "default": [
                        "Product",
                        "Entity"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "Product",
                          "Entity"
                        ]
                      }
                    },
                    "id": {
                      "example": "https://id.gs1.org/01/09520123456788/21/12345",
                      "type": "string",
                      "format": "uri",
                      "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                    },
                    "name": {
                      "example": "EV battery 300Ah.",
                      "type": "string",
                      "description": "The registered name of the entity within the identifier scheme.  Examplesproduct - EV battery 300Ahparty - Sample Company Pty Ltd. facility - Greenacres battery factory"
                    },
                    "registeredId": {
                      "example": "90664869327",
                      "type": "string",
                      "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                    },
                    "idScheme": {
                      "$ref": "#/$defs/IdentifierScheme",
                      "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                    },
                    "serialNumber": {
                      "example": "12345678",
                      "type": "string",
                      "description": "A number or code representing a specific serialised item of the product. Unique within product class."
                    },
                    "batchNumber": {
                      "example": "6789",
                      "type": "string",
                      "description": "Identifier of the specific production batch of the product.  Unique within the product class."
                    },
                    "productImage": {
                      "$ref": "#/$defs/Link",
                      "description": "Reference information (location, type, name) of an image of the product."
                    },
                    "description": {
                      "example": "400Ah 24v LiFePO4 battery",
                      "type": "string",
                      "description": "A textual description providing details about the product."
                    },
                    "productCategory": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/Classification"
                      },
                      "description": "A code representing the product's class, typically using the UN CPC (United Nations Central Product Classification) https://unstats.un.org/unsd/classifications/Econ/cpc"
                    },
                    "furtherInformation": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/Link"
                      },
                      "description": "A URL pointing to further human readable information about the product."
                    },
                    "producedByParty": {
                      "$ref": "#/$defs/Entity",
                      "description": "The Party entity that manufactured the product."
                    },
                    "producedAtFacility": {
                      "$ref": "#/$defs/Entity",
                      "description": "The Facility where the product batch was produced / manufactured."
                    },
                    "dimensions": {
                      "$ref": "#/$defs/Dimension",
                      "description": "The physical dimensions of the product. Not every dimension is relevant to every products.  For example bulk materials may have wieght and volume but not length, with, or height.\"weight\":{\"value\":10, \"unit\":\"KGM\"}"
                    },
                    "productionDate": {
                      "example": "2024-04-25",
                      "type": "string",
                      "format": "date",
                      "description": "The ISO 8601 date on which the product batch was manufactured."
                    },
                    "countryOfProduction": {
                      "type": "string",
                      "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
                      "description": "The country in which this item was produced / manufactured.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
                    },
                    "materialsProvenance": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/Material"
                      },
                      "description": "An array of Provenance objects providing details on the origin and mass fraction of components or ingredients of the product batch. "
                    },
                    "conformityDeclarations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/Declaration"
                      },
                      "description": "An array of claim objects representing various product conformity claims about the product / batch.  These can be sustainability claims, circularity claims, or any other claim type within the conformity topic list."
                    },
                    "circularityScorecard": {
                      "$ref": "#/$defs/CircularityPerformance",
                      "description": "A circularity performance scorecard"
                    },
                    "emissionsScorecard": {
                      "$ref": "#/$defs/EmissionsPerformance",
                      "description": "An emissions performacne scorecard"
                    },
                    "traceabilityInformation": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/SecureLink"
                      },
                      "description": "An array of secure links to TraceabilityEvent objects detailing EPCIS events related to the traceability of the product batch. SHOULD be provided for any product passport issued at batch or item level. Links should include the hash of the target and may point to encrypted targets."
                    }
                  },
                  "description": "The ProductInformation class encapsulates detailed information regarding a specific product, including its identification details, manufacturer, and other pertinent details.  ",
                  "required": [
                    "id",
                    "name"
                  ],
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "$defs": {
                    "CredentialIssuer": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "CredentialIssuer"
                          ],
                          "default": [
                            "CredentialIssuer"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "CredentialIssuer"
                            ]
                          }
                        },
                        "id": {
                          "example": "did:web:identifiers.example-company.com:12345",
                          "type": "string",
                          "format": "uri",
                          "description": "The W3C DID of the issuer - should be a did:web or did:tdw"
                        },
                        "name": {
                          "example": "Example Company Pty Ltd",
                          "type": "string",
                          "description": "The name of the issuer person or organisation"
                        },
                        "otherIdentifiers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Entity"
                          },
                          "description": "An optional list of other registered identifiers for this credential issuer "
                        }
                      },
                      "description": "The issuer party ()person or orgnaition) of a verifiable credential.",
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "Entity": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Entity"
                          ],
                          "default": [
                            "Entity"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Entity"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://id.gs1.org/01/09520123456788/21/12345",
                          "type": "string",
                          "format": "uri",
                          "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                        },
                        "name": {
                          "example": "EV battery 300Ah.",
                          "type": "string",
                          "description": "The registered name of the entity within the identifier scheme.  Examplesproduct - EV battery 300Ahparty - Sample Company Pty Ltd. facility - Greenacres battery factory"
                        },
                        "registeredId": {
                          "example": "90664869327",
                          "type": "string",
                          "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                        },
                        "idScheme": {
                          "$ref": "#/$defs/IdentifierScheme",
                          "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                        }
                      },
                      "description": "The ID and Name of an identified entity such qs a product, facility, party, standard, etc.  If the identifier is a W3C DID then the corresponding DID document SHOULD include a serviceEndpoint of type \"IdentityResolver\". If the identifier is not a W3C DID then the id peroperty SHOULD be an identity resolver URL.",
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "IdentifierScheme": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "IdentifierScheme"
                          ],
                          "default": [
                            "IdentifierScheme"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "IdentifierScheme"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://id.gs1.org/01/",
                          "type": "string",
                          "format": "uri",
                          "description": "The globally unique identifier of the registration scheme. The scheme should be registered and discoverable from vocabulary.uncefact.org/identifierSchemes"
                        },
                        "name": {
                          "example": "Global Trade Identification Number (GTIN)",
                          "type": "string",
                          "description": "The name of the identifier scheme. "
                        }
                      },
                      "description": "An identifier registration scheme for products, facilities, or organisations. Typically operated by a state, national or gloabl authority."
                    },
                    "Product": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Product",
                            "Entity"
                          ],
                          "default": [
                            "Product",
                            "Entity"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Product",
                              "Entity"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://id.gs1.org/01/09520123456788/21/12345",
                          "type": "string",
                          "format": "uri",
                          "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                        },
                        "name": {
                          "example": "EV battery 300Ah.",
                          "type": "string",
                          "description": "The registered name of the entity within the identifier scheme.  Examplesproduct - EV battery 300Ahparty - Sample Company Pty Ltd. facility - Greenacres battery factory"
                        },
                        "registeredId": {
                          "example": "90664869327",
                          "type": "string",
                          "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                        },
                        "idScheme": {
                          "$ref": "#/$defs/IdentifierScheme",
                          "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                        },
                        "serialNumber": {
                          "example": "12345678",
                          "type": "string",
                          "description": "A number or code representing a specific serialised item of the product. Unique within product class."
                        },
                        "batchNumber": {
                          "example": "6789",
                          "type": "string",
                          "description": "Identifier of the specific production batch of the product.  Unique within the product class."
                        },
                        "productImage": {
                          "$ref": "#/$defs/Link",
                          "description": "Reference information (location, type, name) of an image of the product."
                        },
                        "description": {
                          "example": "400Ah 24v LiFePO4 battery",
                          "type": "string",
                          "description": "A textual description providing details about the product."
                        },
                        "productCategory": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Classification"
                          },
                          "description": "A code representing the product's class, typically using the UN CPC (United Nations Central Product Classification) https://unstats.un.org/unsd/classifications/Econ/cpc"
                        },
                        "furtherInformation": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Link"
                          },
                          "description": "A URL pointing to further human readable information about the product."
                        },
                        "producedByParty": {
                          "$ref": "#/$defs/Entity",
                          "description": "The Party entity that manufactured the product."
                        },
                        "producedAtFacility": {
                          "$ref": "#/$defs/Entity",
                          "description": "The Facility where the product batch was produced / manufactured."
                        },
                        "dimensions": {
                          "$ref": "#/$defs/Dimension",
                          "description": "The physical dimensions of the product. Not every dimension is relevant to every products.  For example bulk materials may have wieght and volume but not length, with, or height.\"weight\":{\"value\":10, \"unit\":\"KGM\"}"
                        },
                        "productionDate": {
                          "example": "2024-04-25",
                          "type": "string",
                          "format": "date",
                          "description": "The ISO 8601 date on which the product batch was manufactured."
                        },
                        "countryOfProduction": {
                          "type": "string",
                          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
                          "description": "The country in which this item was produced / manufactured.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
                        },
                        "materialsProvenance": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Material"
                          },
                          "description": "An array of Provenance objects providing details on the origin and mass fraction of components or ingredients of the product batch. "
                        },
                        "conformityDeclarations": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Declaration"
                          },
                          "description": "An array of claim objects representing various product conformity claims about the product / batch.  These can be sustainability claims, circularity claims, or any other claim type within the conformity topic list."
                        },
                        "circularityScorecard": {
                          "$ref": "#/$defs/CircularityPerformance",
                          "description": "A circularity performance scorecard"
                        },
                        "emissionsScorecard": {
                          "$ref": "#/$defs/EmissionsPerformance",
                          "description": "An emissions performacne scorecard"
                        },
                        "traceabilityInformation": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/SecureLink"
                          },
                          "description": "An array of secure links to TraceabilityEvent objects detailing EPCIS events related to the traceability of the product batch. SHOULD be provided for any product passport issued at batch or item level. Links should include the hash of the target and may point to encrypted targets."
                        }
                      },
                      "description": "The ProductInformation class encapsulates detailed information regarding a specific product, including its identification details, manufacturer, and other pertinent details.  ",
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "Link": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Link"
                          ],
                          "default": [
                            "Link"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Link"
                            ]
                          }
                        },
                        "linkURL": {
                          "example": "https://files.example-certifier.com/1234567.json",
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the target resource. "
                        },
                        "linkName": {
                          "example": "GBA rule book conformity certificate",
                          "type": "string",
                          "description": "A display name for the target resource "
                        },
                        "linkType": {
                          "example": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
                          "type": "string",
                          "description": "The type of the target resource - drawn from a controlled vocabulary "
                        }
                      },
                      "description": "A structure to provide a URL link plus metadata associated with the link."
                    },
                    "Classification": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Classification"
                          ],
                          "default": [
                            "Classification"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Classification"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/46410",
                          "type": "string",
                          "format": "uri",
                          "description": "The globally unique URI representing the specific classifier value"
                        },
                        "code": {
                          "example": "46410",
                          "type": "string",
                          "description": "classification code within the scheme"
                        },
                        "name": {
                          "example": "Primary cells and primary batteries",
                          "type": "string",
                          "description": "Name of the classification represented by the code"
                        },
                        "schemeID": {
                          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/",
                          "type": "string",
                          "format": "uri",
                          "description": "Classification scheme ID"
                        },
                        "schemeName": {
                          "example": "UN Central Product Classification (CPC)",
                          "type": "string",
                          "description": "The name of the classification scheme"
                        }
                      },
                      "description": "A classification scheme and code / name representing a category value for a product, entity, or facility.",
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "Dimension": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Dimension"
                          ],
                          "default": [
                            "Dimension"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Dimension"
                            ]
                          }
                        },
                        "weight": {
                          "$ref": "#/$defs/Measure",
                          "description": "the weight of the product. EG {\"value\":10, \"unit\":\"KGM\"}"
                        },
                        "length": {
                          "$ref": "#/$defs/Measure",
                          "description": "The length of the product or packaging eg {\"value\":840, \"unit\":\"MMT\"}"
                        },
                        "width": {
                          "$ref": "#/$defs/Measure",
                          "description": "The width of the product or packaging. eg {\"value\":150, \"unit\":\"MMT\"}"
                        },
                        "height": {
                          "$ref": "#/$defs/Measure",
                          "description": "The height of the product or packaging. eg {\"value\":220, \"unit\":\"MMT\"}"
                        },
                        "volume": {
                          "$ref": "#/$defs/Measure",
                          "description": "The displacement volume of the product. eg {\"value\":7.5, \"unit\":\"LTR\"}"
                        }
                      },
                      "description": "Overall (length, width, height) dimensions and weight/volume of an item."
                    },
                    "Measure": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Measure"
                          ],
                          "default": [
                            "Measure"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Measure"
                            ]
                          }
                        },
                        "value": {
                          "example": 10,
                          "type": "number",
                          "description": "The numeric value of the measure"
                        },
                        "unit": {
                          "type": "string",
                          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
                          "description": "Unit of measure drawn from the UNECE rec20 measure code list.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
                        }
                      },
                      "description": "The measure class defines a numeric measured value (eg 10) and a coded unit of measure (eg KG).",
                      "required": [
                        "value",
                        "unit"
                      ]
                    },
                    "Material": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Material"
                          ],
                          "default": [
                            "Material"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Material"
                            ]
                          }
                        },
                        "name": {
                          "example": "Lithium Spodumene",
                          "type": "string",
                          "description": "Name of this material (eg \"Egyptian Cotton\")"
                        },
                        "originCountry": {
                          "type": "string",
                          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
                          "description": "A ISO 3166-1 code representing the country of origin of the component or ingredient.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
                        },
                        "materialType": {
                          "$ref": "#/$defs/Classification",
                          "description": "The type of this material - as a value drawn from a controlled vocabulary eg from UN Framework Classification for Resources (UNFC)."
                        },
                        "massFraction": {
                          "example": 0.2,
                          "type": "number",
                          "description": "The mass fraction of the product represented by this material. The sum of all mass fraction values for a given passport should be 1."
                        },
                        "recycledAmount": {
                          "example": 0.5,
                          "type": "number",
                          "description": "Mass fraction of this material that is recycled (eg 50% recycled Lithium)"
                        },
                        "hazardous": {
                          "example": "false",
                          "type": "boolean",
                          "description": "Indicates whether this material is hazardous. If true then the materialSafetyInformation proerty must be present"
                        },
                        "materialSafetyInformation": {
                          "$ref": "#/$defs/Link",
                          "description": "Refernece to further information obout safe handling of this hazardous material (for example a link to a material safety data sheet)"
                        }
                      },
                      "description": "The material class encapsulates details about the origin or source of raw materials in a product, including the country of origin and the mass fraction.",
                      "required": [
                        "name"
                      ]
                    },
                    "Declaration": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Declaration"
                          ],
                          "default": [
                            "Declaration"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Declaration"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://products.example-company.com/09520123456788/declarations/12345",
                          "type": "string",
                          "format": "uri",
                          "description": "A unique identifier for the delcaration. Often this will be an extension of the product.id or attestation.id. But could be a UUID."
                        },
                        "referenceStandard": {
                          "$ref": "#/$defs/Standard",
                          "description": "The reference to the standard that defines the specification / criteria"
                        },
                        "referenceRegulation": {
                          "$ref": "#/$defs/Regulation",
                          "description": "The reference to the regulation that defines the assessment criteria"
                        },
                        "assessmentCriteria": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Criterion"
                          },
                          "description": "The specification against which the assessment is made."
                        },
                        "declaredValues": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Metric"
                          },
                          "description": "The list of specific values measured as part of this assessment (eg tensile strength)"
                        },
                        "compliance": {
                          "example": "true",
                          "type": "boolean",
                          "description": "An indicator of whether or not the assessment meets the specification."
                        },
                        "conformityTopic": {
                          "type": "string",
                          "enum": [
                            "environment.energy",
                            "environment.emissions",
                            "environment.water",
                            "environment.waste",
                            "environment.deforestation",
                            "environment.biodiversity",
                            "circularity.content",
                            "circularity.design",
                            "social.labour",
                            "social.rights",
                            "social.community",
                            "social.safety",
                            "governance.ethics",
                            "governance.compliance",
                            "governance.transparency"
                          ],
                          "example": "environment.energy",
                          "description": "The conformity topic category for this assessment (eg vocabulary.uncefact.org/sustainability/emissions)"
                        },
                        "conformityEvidence": {
                          "$ref": "#/$defs/SecureLink",
                          "description": "A URI pointing to the evidence supporting the claim. SHOULD be a URL to a UNTP Digital COnformity Credential (DCC)"
                        }
                      },
                      "description": "A declaration of conformance with one or more criteria from a specific standard or regulation.  ",
                      "required": [
                        "id",
                        "compliance",
                        "conformityTopic"
                      ]
                    },
                    "Standard": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Standard"
                          ],
                          "default": [
                            "Standard"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Standard"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf",
                          "type": "string",
                          "format": "uri",
                          "description": "A unique identifier for the standard (eg https://www.iso.org/standard/60857.html)."
                        },
                        "name": {
                          "example": "GBA Battery Passport Greenhouse Gas Rulebook - V.2.0",
                          "type": "string",
                          "description": "The name of the standard"
                        },
                        "issuingParty": {
                          "$ref": "#/$defs/Entity",
                          "description": "The party that issued the standard "
                        },
                        "issueDate": {
                          "example": "2023-12-05",
                          "type": "string",
                          "format": "date",
                          "description": "The date when the standard was issued."
                        }
                      },
                      "description": "A standard (eg ISO 14000) that specifies the criteria for conformance.",
                      "required": [
                        "issuingParty"
                      ]
                    },
                    "Regulation": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Regulation"
                          ],
                          "default": [
                            "Regulation"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Regulation"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://www.legislation.gov.au/F2008L02309/latest/versions",
                          "type": "string",
                          "format": "uri",
                          "description": "The globally unique identifier of this regulation. "
                        },
                        "name": {
                          "example": "NNational Greenhouse and Energy Reporting (Measurement) Determination",
                          "type": "string",
                          "description": "The name of the regulation or act."
                        },
                        "jurisdictionCountry": {
                          "type": "string",
                          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId",
                          "description": "The legal jurisdiction (country) under which the regulation is issued.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId\n    "
                        },
                        "administeredBy": {
                          "$ref": "#/$defs/Entity",
                          "description": "the issuing body of the regulation. For example Australin Goernment Department of Climate Change, Energy, the Environment and Water"
                        },
                        "effectiveDate": {
                          "example": "2024-03-20",
                          "type": "string",
                          "format": "date",
                          "description": "the date at which the regulation came into effect."
                        }
                      },
                      "description": "A regulation (eg EU deforestation regulation) that defines the criteria for assessment.",
                      "required": [
                        "administeredBy"
                      ]
                    },
                    "Criterion": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Criterion"
                          ],
                          "default": [
                            "Criterion"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Criterion"
                            ]
                          }
                        },
                        "id": {
                          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf#BatteryAssembly",
                          "type": "string",
                          "format": "uri",
                          "description": "A unique identifier for the criteria within the standard  or regulation. For example CO2 emissions calaculations for liquid fule combusion."
                        },
                        "name": {
                          "example": "GBA Battery rule book v2.0 battery assembly guidelines.",
                          "type": "string",
                          "description": "A name that describes this criteria."
                        },
                        "thresholdValues": {
                          "type": "array",
                          "items": {
                            "$ref": "#/$defs/Metric"
                          },
                          "description": "A conformity threshold defined by the specification (eg minimum compressive strength) "
                        }
                      },
                      "description": "A specific rule or criterion within a standard or regulation. eg a carbon intensity calculation rule within an emissions standard.",
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "Metric": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "Metric"
                          ],
                          "default": [
                            "Metric"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "Metric"
                            ]
                          }
                        },
                        "metricName": {
                          "example": "GHG emissions intensity",
                          "type": "string",
                          "description": "A human readable name for this metric (for example \"Tensile strength\")"
                        },
                        "metricValue": {
                          "$ref": "#/$defs/Measure",
                          "description": "A numeric value and unit of measure for this metric. Could be a measured value or a specified threshold. Eg {\"value\":400, \"unit\":\"MPA\"} as tensile strenght of structural steel"
                        },
                        "accuracy": {
                          "example": 0.05,
                          "type": "number",
                          "description": "A percentage represented as a numeric between 0 and 1 indicating the rage of accuracy of the claimed value (eg 0.05 means that the actual value is within 5% of the claimed value.)"
                        }
                      },
                      "description": "A specific measure of performance against the criteria that governs the claim.  Expressed as an array of metric (ie unit of emasure) / value (ie the actual numeric value) pairs.  ",
                      "required": [
                        "metricName",
                        "metricValue"
                      ]
                    },
                    "SecureLink": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "SecureLink",
                            "Link"
                          ],
                          "default": [
                            "SecureLink",
                            "Link"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "SecureLink",
                              "Link"
                            ]
                          }
                        },
                        "linkURL": {
                          "example": "https://files.example-certifier.com/1234567.json",
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the target resource. "
                        },
                        "linkName": {
                          "example": "GBA rule book conformity certificate",
                          "type": "string",
                          "description": "A display name for the target resource "
                        },
                        "linkType": {
                          "example": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
                          "type": "string",
                          "description": "The type of the target resource - drawn from a controlled vocabulary "
                        },
                        "hashDigest": {
                          "example": "6239119dda5bd4c8a6ffb832fe16feaa5c27b7dba154d24c53d4470a2c69adc2",
                          "type": "string",
                          "description": "The hash of the file."
                        },
                        "hashMethod": {
                          "type": "string",
                          "enum": [
                            "SHA-256",
                            "SHA-1"
                          ],
                          "example": "SHA-256",
                          "description": "The hashing algorithm used to create the target hash.  SHA-265 is the recommedned standard"
                        },
                        "encryptionMethod": {
                          "type": "string",
                          "enum": [
                            "none",
                            "AES"
                          ],
                          "example": "none",
                          "description": "The symmetric encryption algorithm used to encrypt the link target.  AES is the recommended standard. Decryption keys are expected to be passed out of bounds."
                        }
                      },
                      "description": "A binary file that is hashed ()for tamper evidence) and optionally encrypted (for confidentiality)."
                    },
                    "CircularityPerformance": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "CircularityPerformance"
                          ],
                          "default": [
                            "CircularityPerformance"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "CircularityPerformance"
                            ]
                          }
                        },
                        "recyclingInformation": {
                          "$ref": "#/$defs/Link",
                          "description": "A URI pointing to recycling information for the product."
                        },
                        "repairInformation": {
                          "$ref": "#/$defs/Link",
                          "description": "A URI pointing to repair instructions for this product."
                        },
                        "recyclableContent": {
                          "example": 0.5,
                          "type": "number",
                          "format": "float",
                          "description": "The fraction of the this product (my mass) that has been designed to be recyclable / re-usable. This will be be the total fraction that can avoid waste / landfill."
                        },
                        "recyecledContent": {
                          "example": 0.3,
                          "type": "number",
                          "format": "float",
                          "description": "The fraction (by mass) of recycled / repurposed, repaired content in this product.  This will be the total virgin content fraction."
                        },
                        "utilityFactor": {
                          "example": 1.2,
                          "type": "number",
                          "format": "float",
                          "description": "An indicator of durability defined as the lifetime (typically measures as usage cycles) for this product divided by the industry average. For example a battery with a 10,000 cycle lifetime where industry average is 5,000 cycles will have a durability factor of 2. If unknown set to 1 or omit.  "
                        },
                        "materialCircularityIndicator": {
                          "example": 0.67,
                          "type": "number",
                          "format": "float",
                          "description": "The overall circularity performance indicator for this product. Calculated as 1 - (V+W)/2D where - V = Virgin material proportion by mass (will be 1- recycled content) - W = Waste leakage proportion by mass (will be 1 - recyclableContent)  - D = Utility factor (set to 1 if unknown).  "
                        }
                      },
                      "description": "High level corcularity information about this product.  Note that this doens not substitute for detailed product circularity data sheet (PCDS) criteria which would be represented as a set of conformity claims against individual ISO PCDS criteria."
                    },
                    "EmissionsPerformance": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "type": {
                          "type": "array",
                          "readOnly": true,
                          "const": [
                            "EmissionsPerformance"
                          ],
                          "default": [
                            "EmissionsPerformance"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "EmissionsPerformance"
                            ]
                          }
                        },
                        "carbonFootprint": {
                          "example": 1.8,
                          "type": "number",
                          "format": "float",
                          "description": "The carbon footprint of the product in KgCO2e per declared unit."
                        },
                        "declaredUnit": {
                          "type": "string",
                          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
                          "description": "The unit of product (EA, KGM, LTR, etc) that is the basis for carbon footprint.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
                        },
                        "operationalScope": {
                          "type": "string",
                          "enum": [
                            "None",
                            "CradleToGate",
                            "CradleToGrave"
                          ],
                          "example": "None",
                          "description": "The operational scope of the emissions performance. Only scope 1 & 2, or inlcuing upstream scope 3 (cradle to gate) or upstream and downstream scope 3 (cradle to grave)."
                        },
                        "primarySourcedRatio": {
                          "example": 0.3,
                          "type": "number",
                          "format": "float",
                          "description": "The ratio of emissions data from primary sources (ie from supplier / product specific information rather than secondary / industry averages)."
                        },
                        "reportingStandard": {
                          "$ref": "#/$defs/Standard",
                          "description": "The reporting standard (eg GHG Protocol, IFRS S2, ESRS, etc) against which this product emissions performance is assessed."
                        }
                      },
                      "description": "Product specific characteristics.  This class is an extension point for industry specific product characteristics or performance information such as clothing size or battery capacity.",
                      "required": [
                        "carbonFootprint",
                        "declaredUnit",
                        "operationalScope",
                        "primarySourcedRatio"
                      ]
                    }
                  }
                },
                "data": {
                  "registeredId": "(01)09354441000299",
                  "serialNumber": "101",
                  "conformityDeclarations": [
                    {
                      "conformityTopic": "DAFF Property Accreditation",
                      "conformityEvidence": {
                        "hashMethod": "SHA-256",
                        "hashDigest": "6239119",
                        "linkURL": "https://freshchain.au/documents/PdvyHT3TexyWZhc4TUV8mevzte8g3gIKbdvyHT3TexyWZhc4TUV8mevzte8g3gIKb.pdf",
                        "linkType": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
                        "linkName": "DAFF Packhouse Property Accreditation",
                        "encryptionMethod": "AES"
                      },
                      "compliance": true,
                      "referenceStandard": {
                        "name": "DAFF Property Accreditation",
                        "id": "https://faolex.fao.org/docs/pdf/aus195635.pdf",
                        "type": [
                          "Standard"
                        ],
                        "issueDate": "2023-09-30",
                        "issuingParty": {
                          "registeredId": "34190894983.0",
                          "idScheme": {
                            "name": "ABN",
                            "id": "https://abr.business.gov.au/ABN/View?abn=34190894983",
                            "type": [
                              "IdentifierScheme"
                            ]
                          },
                          "name": "DAFF",
                          "id": "https://abr.business.gov.au/ABN/View?abn=34190894983",
                          "type": [
                            "Entity"
                          ]
                        }
                      },
                      "id": "https://freshchain.au/documents/PdvyHT3TexyWZhc4TUV8mevzte8g3gIKbdvyHT3TexyWZhc4TUV8mevzte8g3gIKb.pdf",
                      "type": [
                        "Declaration"
                      ],
                      "referenceRegulation": {
                        "jurisdictionCountry": "Australia",
                        "name": "Section 79 of the Export Control Act 2020",
                        "id": "https://faolex.fao.org/docs/pdf/aus195635.pdf",
                        "type": [
                          "Regulation"
                        ],
                        "administeredBy": {
                          "registeredId": "34190894983.0",
                          "idScheme": {
                            "name": "ABN",
                            "id": "https://abr.business.gov.au/ABN/View?abn=34190894983",
                            "type": [
                              "IdentifierScheme"
                            ]
                          },
                          "name": "DAFF",
                          "id": "https://abr.business.gov.au/ABN/View?abn=34190894983",
                          "type": [
                            "Entity"
                          ]
                        },
                        "effectiveDate": "2023/09/30 00:00:00.000"
                      }
                    },
                    {
                      "conformityTopic": "FreshChain GLN Verification",
                      "conformityEvidence": {
                        "hashMethod": "SHA-256",
                        "hashDigest": "6239119",
                        "linkURL": "http://localhost/verify?q=%7B%22payload%22%3A%20%7B%22uri%22%3A%20%22https%3A//cherries.datatrust.link%3A3334/v1/verifiable-credentials/packhouse_freshchain_gln_verification_dcc.json%22%2C%20%22hash%22%3A%20%22c9ef1c0b263c09a51512b7786dede6bd54c1804d1b7c0da6ae06468e0cfdeec839bc2432c01e46b150016fce1003a3f4604665fd266c14b21019fd71f6394fc6%22%2C%20%22key%22%3A%20%22d6e67853f57c4e750fa1499e9dc8d21f8908fa052286c355c37756501dd97aaa%22%7D%7D",
                        "linkType": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
                        "linkName": "FreshChain GLN Verification",
                        "encryptionMethod": "AES"
                      },
                      "compliance": true,
                      "referenceStandard": {
                        "name": "FreshChain GLN Verification",
                        "id": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf",
                        "type": [
                          "Standard"
                        ],
                        "issueDate": "2023/09/30 00:00:00.000",
                        "issuingParty": {
                          "registeredId": "70627353628.0",
                          "idScheme": {
                            "name": "ABN",
                            "id": "https://abr.business.gov.au/ABN/View/70627353628",
                            "type": [
                              "IdentifierScheme"
                            ]
                          },
                          "name": "FreshChain Systems",
                          "id": "https://abr.business.gov.au/ABN/View/70627353628",
                          "type": [
                            "Entity"
                          ]
                        }
                      },
                      "id": "http://localhost/verify?q=%7B%22payload%22%3A%20%7B%22uri%22%3A%20%22https%3A//cherries.datatrust.link%3A3334/v1/verifiable-credentials/packhouse_freshchain_gln_verification_dcc.json%22%2C%20%22hash%22%3A%20%22c9ef1c0b263c09a51512b7786dede6bd54c1804d1b7c0da6ae06468e0cfdeec839bc2432c01e46b150016fce1003a3f4604665fd266c14b21019fd71f6394fc6%22%2C%20%22key%22%3A%20%22d6e67853f57c4e750fa1499e9dc8d21f8908fa052286c355c37756501dd97aaa%22%7D%7D",
                      "type": [
                        "Declaration"
                      ],
                      "referenceRegulation": {
                        "jurisdictionCountry": "Australia",
                        "name": "Location Verification",
                        "id": "https://www.legislation.gov.au/F2008L02309/latest/versions",
                        "type": [
                          "Regulation"
                        ],
                        "administeredBy": {
                          "registeredId": "70627353628.0",
                          "idScheme": {
                            "name": "ABN",
                            "id": "https://abr.business.gov.au/ABN/View/70627353628",
                            "type": [
                              "IdentifierScheme"
                            ]
                          },
                          "name": "FreshChain Systems",
                          "id": "https://abr.business.gov.au/ABN/View/70627353628",
                          "type": [
                            "Entity"
                          ]
                        },
                        "effectiveDate": "2023/09/30 00:00:00.000"
                      }
                    }
                  ],
                  "producedByParty": {
                    "registeredId": "54 642 704 612",
                    "idScheme": {
                      "name": "Australian Business Number (ABN)",
                      "id": "https://abr.business.gov.au/ABN/View?abn=54642704612",
                      "type": [
                        "IdentifierScheme"
                      ]
                    },
                    "name": "CANTRILL ORGANICS PTY LIMITED",
                    "id": "https://abr.business.gov.au/ABN/View?abn=54642704612",
                    "type": [
                      "Entity"
                    ]
                  },
                  "description": "Cantrill Organics Premium Organic Cherries 5kg",
                  "type": [
                    "Product",
                    "Entity"
                  ],
                  "traceabilityInformation": [
                    {
                      "hashMethod": "SHA-256",
                      "hashDigest": "6239119",
                      "linkURL": "http://localhost/verify?q=%7B%22payload%22%3A%20%7B%22uri%22%3A%20%22https%3A//cherries.datatrust.link%3A3334/v1/verifiable-credentials/packhouse_packing_event_dte.json%22%2C%20%22hash%22%3A%20%22982a9e7c092d6c085264153fb7b82c572a1c454f1388a938a21630adee95c20f093d044bbdf2a35f0376254a6785efda7abfea5894403568c13d1bdfbe6b985c%22%2C%20%22key%22%3A%20%22066aea6a60da45181cb07d236c10d017673b70d4d9725660623bb2b98c3ec08e%22%7D%7D",
                      "linkType": "https://test.uncefact.org/vocabulary/linkTypes/dte",
                      "linkName": "Packing Event Credential",
                      "encryptionMethod": "AES"
                    },
                    {
                      "hashMethod": "SHA-256",
                      "hashDigest": "6239119",
                      "linkURL": "http://localhost/verify?q=%7B%22payload%22%3A%20%7B%22uri%22%3A%20%22https%3A//cherries.datatrust.link%3A3334/v1/verifiable-credentials/packhouse_palletisation_event_dte.json%22%2C%20%22hash%22%3A%20%2286e08447069efb13a9f1d8a987fd15efe30dd2e8b6779fbd7f56ef99bfe773d0caefd013c2902421ed3e954afcc04284a76ca0ef00787a8fb620c1c426b2abd3%22%2C%20%22key%22%3A%20%226bd2fa0282e0cb00ff023da57f303f2f97440da9dd37bbf7a4ec3045d755e5bf%22%7D%7D",
                      "linkType": "https://test.uncefact.org/vocabulary/linkTypes/dte",
                      "linkName": "Palletisation Event Credential",
                      "encryptionMethod": "AES"
                    },
                    {
                      "hashMethod": "SHA-256",
                      "hashDigest": "6239119",
                      "linkURL": "https://files.example-certifier.com/1234567.json",
                      "linkType": "https://test.uncefact.org/vocabulary/linkTypes/dpp",
                      "linkName": "Transfer Event Credential",
                      "encryptionMethod": "AES"
                    }
                  ],
                  "productCategory": [
                    {
                      "code": "01344",
                      "name": "Cherries",
                      "schemeName": "UN Central Product Classification (CPC)",
                      "schemeID": "https://unstats.un.org/unsd/classifications/Econ/cpc/",
                      "id": "https://unstats.un.org/unsd/classifications/Econ/cpc/01344",
                      "type": [
                        "Classification"
                      ]
                    }
                  ],
                  "idScheme": {
                    "name": "Global Trade Identification Number (GTIN)",
                    "id": "https://id.gs1.org/01/09354441000299",
                    "type": [
                      "IdentifierScheme"
                    ]
                  },
                  "productImage": {
                    "linkURL": "https://freshchain.au/x/45125-5kg-Export-Premium-box-with-cherries.jpg",
                    "linkType": "https://test.uncefact.org/vocabulary/linkTypes/dcc",
                    "linkName": "Cantrill Organics Premium Organic Cherries 5kg"
                  },
                  "productionDate": "45534.0",
                  "countryOfProduction": "036",
                  "name": "Organic Cherries",
                  "producedAtFacility": {
                    "registeredId": "9354441099972",
                    "idScheme": {
                      "name": "Global Location Identification Number (GLN)",
                      "id": "https://id.gs1.org/414/",
                      "type": [
                        "IdentifierScheme"
                      ]
                    },
                    "name": "Cantrill Organics Packhouse CP54",
                    "id": "https://id.gs1.org/414/09354441099972",
                    "type": [
                      "Entity"
                    ]
                  },
                  "id": "https://id.gs1.org/01/09520123456788/21/12345",
                  "batchNumber": "4123010001",
                  "dimensions": {
                    "length": {
                      "unit": "CMT",
                      "value": 37
                    },
                    "width": {
                      "unit": "CMT",
                      "value": 27
                    },
                    "weight": {
                      "unit": "KGM",
                      "value": 5
                    },
                    "height": {
                      "unit": "CMT",
                      "value": 12
                    }
                  }
                },
                "className": "json-form",
                "style": {
                  "margin": "40px auto",
                  "paddingTop": "40px",
                  "width": "80%"
                }
              }
            },
            {
              "name": "CustomButton",
              "type": "Submit",
              "props": {
                "includeDownload": true,
                "downloadFileName": "product"
              }
            },
            {
              "name": "BarcodeGenerator",
              "type": "Result",
              "props": {
                "dataPath": "/vc/credentialSubject/registeredId"
              }
            }
          ],
          "services": [
            {
              "name": "processDPP",
              "parameters": [
                {
                  "vckit": {
                    "vckitAPIUrl": "http://localhost:3332/v1",
                    "issuer": "did:web:wallaby-trusty-crow.ngrok-free.app"
                  },
                  "dpp": {
                    "context": [
                      "https://test.uncefact.org/vocabulary/untp/dpp/0.3.10/"
                    ],
                    "renderTemplate": [
                      {
                        "template": "<!DOCTYPE html> <html lang='en'> <head> <meta charset='UTF-8' \/> <meta name='viewport' content='width=device-width,initial-scale=1' \/> <link href='https:\/\/fonts.googleapis.com\/css2?family=Source+Sans 3:ital,wght@0,200..900;1,200..900&display=swap' rel='stylesheet' \/> <title>Digital Product Passport<\/title> <style> * { margin: 0; padding: 0; box-sizing: border-box; } body { font-family: 'Source Sans 3', sans-serif; background-color: #f4f7fa; color: #333; } .container { text-align: initial; min-width: 290px; max-width: 390px; margin: 0 auto; display: flex; flex-direction: column; gap: 32px; background-color: #ffffff; border-radius: 12px; border: 4px solid #6ec72f; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); padding: 16px; position: relative; overflow: hidden; } .top-logo { width: 80px; margin: 0 auto; display: block; } .title { text-align: center; font-size: 24px; font-weight: 700; color: #6ec72f; margin-top: 10px; } .header { background-color: #6ec72f; color: #ffffff; padding: 16px; border-radius: 12px 12px 0 0; position: relative; } .header-image { position: relative; background-image: linear-gradient(to right bottom, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.5)), url({{{credentialSubject.productImage.linkURL}}}); background-size: cover; background-position: center; min-height: 215px; border-radius: 12px 12px 0 0; overflow: hidden; } .product-name { text-align: center; font-size: 24px; font-weight: 700; color: #6ec72f; margin-top: 16px; position: relative; } .product-name:before, .product-name:after { content: ''; position: absolute; width: 2px; background-color: #6ec72f; top: 0; bottom: -16px; } .product-name:before { left: -20px; } .product-name:after { right: -20px; } .header-image-top-left { position: absolute; top: 25px; left: 15px; font-weight: 500; font-size: 16px; line-height: 22px; color: #fff; } .header-info { padding: 12px 16px; display: flex; flex-wrap: wrap; gap: 12px; background-color: #6ec72f; border-radius: 0 0 12px 12px; color: #fff; overflow: hidden; } .info-item { display: flex; align-items: center; gap: 6px; flex: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .info-item a { padding: 0 2px; font-size: 14px; font-weight: 600; line-height: 15.25px; color: #ffffff; text-decoration: none; } .passport-box { display: flex; flex-direction: column; gap: 24px; margin-top: 16px; } .passport-section { padding: 16px; border: 1px solid #6ec72f; border-radius: 8px; background-color: #ffffff; overflow: hidden; } .section-title { font-size: 18px; font-weight: 700; line-height: 19.62px; color: #6ec72f; margin-bottom: 12px; } .section-content { font-size: 16px; line-height: 18.88px; color: #333; overflow-wrap: break-word; word-wrap: break-word; } .material-list { display: flex; flex-direction: column; gap: 12px; } .material-item { display: flex; justify-content: space-between; padding: 10px; border-bottom: 1px solid #d4d6d8; background-color: #f4f7fa; border-radius: 6px; overflow-wrap: break-word; } .material-item span { font-size: 16px; font-weight: 400; flex: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } .scorecard { display: flex; justify-content: space-between; padding: 10px; border-top: 1px solid #d4d6d8; border-bottom: 1px solid #d4d6d8; background-color: #f9fbfd; border-radius: 8px; overflow: hidden; } .scorecard-title { font-size: 14px; font-weight: 600; color: #6ec72f; } .scorecard-value { font-size: 16px; font-weight: 400; } .footer { text-align: center; padding: 16px; font-size: 14px; color: #777; position: relative; display: flex; flex-direction: column; align-items: center; gap: 10px; overflow: hidden; } .footer-logo { width: 120px; margin-bottom: 10px; } <\/style> <\/head> <body> <div class='container'> <img src='https:\/\/media.licdn.com\/dms\/image\/v2\/C560BAQE-clv2_H3hvA\/company-logo_200_200\/company-logo_200_200\/0\/1630587175948\/freshchain_logo?e=1733356800&v=beta&t=vzhGuhlr_P6sBPa0afFn5Q6xaq662bwizGBN3PZv5d4' alt='FreshChain Logo' class='top-logo' \/> <div class='title'>Digital Product Passport<\/div> <header class='header'> <div class='header-image'> <\/div> <\/header> <div class='product-name'>{{credentialSubject.name}}<\/div> <div class='header-info'> <div class='info-item'> <strong>Batch:<\/strong> <a href='#'>{{credentialSubject.batchNumber}}<\/a> <\/div> <div class='info-item'> <strong>Serial:<\/strong> <a href='#'>{{credentialSubject.serialNumber}}<\/a> <\/div> <\/div> <section class='passport-box'> <div class='passport-section'> <h2 class='section-title'>Product Details<\/h2> <div class='section-content'> <p><strong>ID:<\/strong> {{credentialSubject.id}}<\/p> <p><strong>Description:<\/strong> {{credentialSubject.description}}<\/p> <p><strong>Category:<\/strong> {{#each credentialSubject.productCategory}} {{name}} {{\/each}}<\/p> <p><strong>Dimensions:<\/strong> {{credentialSubject.dimensions.length.value}} x {{credentialSubject.dimensions.width.value}} x {{credentialSubject.dimensions.height.value}} {{credentialSubject.dimensions.length.unit}}<\/p> <p><strong>Weight:<\/strong> {{credentialSubject.dimensions.weight.value}} {{credentialSubject.dimensions.weight.unit}}<\/p> <p><strong>Country of Production:<\/strong> {{credentialSubject.countryOfProduction}}<\/p> <\/div> <\/div> <div class='passport-section'> <h2 class='section-title'>Traceability Information<\/h2> <div class='section-content'> {{#if credentialSubject.traceabilityInformation.[0]}} <div class='traceability-info'> <h3>Traceability Event<\/h3> <div class='traceability-item'> <p><strong>Hash Method:<\/strong> {{{credentialSubject.traceabilityInformation.[0].hashMethod}}}<\/p> <p><strong>Hash Digest:<\/strong> {{{credentialSubject.traceabilityInformation.[0].hashDigest}}}<\/p> <p><strong>Link Name:<\/strong> <a href='{{{credentialSubject.traceabilityInformation.[0].linkURL}}}'>{{{credentialSubject.traceabilityInformation.[0].linkName}}}<\/a><\/p> <p><strong>Link Type:<\/strong> {{{credentialSubject.traceabilityInformation.[0].linkType}}}<\/p> <p><strong>Encryption Method:<\/strong> {{{credentialSubject.traceabilityInformation.[0].encryptionMethod}}}<\/p> <\/div> <\/div> {{\/if}} <\/div> <\/div> <div class='passport-section'> <h2 class='section-title'>Materials Provenance<\/h2> <div class='material-list'> {{#each credentialSubject.materialsProvenance}} <div class='material-item'> <span>{{name}}<\/span> <span>{{originCountry}}<\/span> <span>{{materialType.name}}<\/span> <span>{{massFraction}}<\/span> <\/div> {{\/each}} <\/div> <\/div> <div class='passport-section'> <h2 class='section-title'>Conformity Declarations<\/h2> <div class='section-content'> {{#each credentialSubject.conformityDeclarations}} <p><strong>{{referenceStandard.name}}<\/strong> - {{referenceRegulation.name}}<\/p> {{\/each}} <\/div> <\/div> <div class='passport-section'> <h2 class='section-title'>Circularity and Emissions<\/h2> <div class='scorecard'> <div class='scorecard-item'> <span class='scorecard-title'>Circularity Score:<\/span> <span class='scorecard-value'>{{credentialSubject.circularityScorecard.materialCircularityIndicator}}<\/span> <\/div> <div class='scorecard-item'> <span class='scorecard-title'>Carbon Footprint:<\/span> <span class='scorecard-value'>{{credentialSubject.emissionsScorecard.carbonFootprint}}<\/span> <\/div> <\/div> <\/div> <\/section> <footer class='footer'> <img src='https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTwBQMyRnESCkZwiYcha0bEdcgwR5taehphbg&s' alt='FreshChain Logo' class='footer-logo' \/> Example Company Pty Ltd - Digital Product Passport © 2024 <\/footer> <\/div> <\/body> <\/html>",
                        "@type": "WebRenderingTemplate2022"
                      }
                    ],
                    "type": [
                      "VerifiableCredential",
                      "DigitalProductPassport"
                    ],
                    "dlrLinkTitle": "Product Passport",
                    "dlrIdentificationKeyNamespace": "gs1",
                    "dlrIdentificationKeyType": "gtin",
                    "dlrVerificationPage": "http://localhost:3003/verify"
                  },
                  "dlr": {
                    "dlrAPIUrl": "http://localhost:3000",
                    "dlrAPIKey": "test123",
                    "namespace": "gs1"
                  },
                  "storage": {
                    "url": "http://localhost:3334/v1/documents",
                    "params": {
                      "resultPath": "/uri",
                      "bucket": "verifiable-credentials"
                    },
                    "options": {
                      "method": "POST",
                      "headers": {
                        "Content-Type": "application/json"
                      }
                    }
                  },
                  "identifierKeyPath": "/registeredId",
                  "batchIdentifierKeyPath": "/batchNumber",
                  "itemIdentifierKeyPath": "/serialNumber"
                }
              ]
            },
            {
              "name": "mergeToLocalStorage",
              "parameters": [
                {
                  "storageKey": "orchard_dpps",
                  "objectKeyPath": "/vc/credentialSubject/registeredId"
                }
              ]
            }
          ]
        },
        {
          "name": "Harvest Event",
          "id": "transaction_product",
          "components": [
            {
              "name": "LocalStorageLoader",
              "type": "EntryData",
              "props": {
                "storageKey": "orchard_dpps",
                "nestedComponents": [
                  {
                    "name": "JsonForm",
                    "type": "EntryData",
                    "props": {
                      "schema": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": "array",
                            "readOnly": true,
                            "const": [
                              "TransactionEvent",
                              "Event"
                            ],
                            "default": [
                              "TransactionEvent",
                              "Event"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "TransactionEvent",
                                "Event"
                              ]
                            }
                          },
                          "id": {
                            "readOnly": false,
                            "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                            "type": "string",
                            "format": "uri",
                            "description": "The unique identifier of this event - SHOULD be a UUID"
                          },
                          "eventTime": {
                            "example": "2024-09-01T12:00:00",
                            "type": "string",
                            "format": "date-time",
                            "description": "The ISO-8601 date time when the event occurred."
                          },
                          "action": {
                            "type": "string",
                            "enum": [
                              "observe",
                              "add",
                              "delete"
                            ],
                            "example": "observe",
                            "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                          },
                          "disposition": {
                            "type": "string",
                            "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                            "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                          },
                          "bizStep": {
                            "type": "string",
                            "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                            "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                          },
                          "bizLocation": {
                            "example": "https://id.gs1.org/414/9520123456788",
                            "type": "string",
                            "format": "uri",
                            "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                          },
                          "sensorElementList": {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/SensorElement"
                            },
                            "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                          },
                          "sourceParty": {
                            "$ref": "#/$defs/Entity",
                            "description": "The source party for this supply chain transaction - typically the seller party"
                          },
                          "destinationParty": {
                            "$ref": "#/$defs/Entity",
                            "description": "The destination party for this supply chain transaction - typically the buyer party."
                          },
                          "bizTransaction": {
                            "type": "string",
                            "x-external-enumeration": "https://ref.gs1.org/cbv/BTT",
                            "description": "The document type representing the trade transaction drawn from the business transaction type vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BTT\n    "
                          },
                          "epcList": {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/Item"
                            },
                            "description": "The list of uniquely identified trade items included in this supply chain transaction."
                          },
                          "quantityList": {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/QuantityElement"
                            },
                            "description": "List of quantified product classes that are included in this transaction.  Used when the trade items do not have unique identifiers (eg 100 reels of yarn)"
                          }
                        },
                        "description": "Transaction represents an event in which one or more objects become associated or disassociated with one or more identified business transactions - such as the purchase / shipment of goods between buyer and seller.",
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "$defs": {
                          "CredentialIssuer": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "CredentialIssuer"
                                ],
                                "default": [
                                  "CredentialIssuer"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "CredentialIssuer"
                                  ]
                                }
                              },
                              "id": {
                                "example": "did:web:identifiers.example-company.com:12345",
                                "type": "string",
                                "format": "uri",
                                "description": "The W3C DID of the issuer - should be a did:web or did:tdw"
                              },
                              "name": {
                                "example": "Example Company Pty Ltd",
                                "type": "string",
                                "description": "The name of the issuer person or organisation"
                              },
                              "otherIdentifiers": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Entity"
                                },
                                "description": "An optional list of other registered identifiers for this credential issuer "
                              }
                            },
                            "description": "The issuer party ()person or orgnaition) of a verifiable credential.",
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "Entity": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "Entity"
                                ],
                                "default": [
                                  "Entity"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Entity"
                                  ]
                                }
                              },
                              "id": {
                                "example": "https://id.gs1.org/01/09520123456788/21/12345",
                                "type": "string",
                                "format": "uri",
                                "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                              },
                              "name": {
                                "example": "EV battery 300Ah.",
                                "type": "string",
                                "description": "The registered name of the entity within the identifier scheme.  Examplesproduct - EV battery 300Ahparty - Sample Company Pty Ltd. facility - Greenacres battery factory"
                              },
                              "registeredId": {
                                "example": "90664869327",
                                "type": "string",
                                "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                              },
                              "idScheme": {
                                "$ref": "#/$defs/IdentifierScheme",
                                "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                              }
                            },
                            "description": "The ID and Name of an identified entity such qs a product, facility, party, standard, etc.  If the identifier is a W3C DID then the corresponding DID document SHOULD include a serviceEndpoint of type \"IdentityResolver\". If the identifier is not a W3C DID then the id peroperty SHOULD be an identity resolver URL.",
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "IdentifierScheme": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "IdentifierScheme"
                                ],
                                "default": [
                                  "IdentifierScheme"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "IdentifierScheme"
                                  ]
                                }
                              },
                              "id": {
                                "example": "https://id.gs1.org/01/",
                                "type": "string",
                                "format": "uri",
                                "description": "The globally unique identifier of the registration scheme. The scheme should be registered and discoverable from vocabulary.uncefact.org/identifierSchemes"
                              },
                              "name": {
                                "example": "Global Trade Identification Number (GTIN)",
                                "type": "string",
                                "description": "The name of the identifier scheme. "
                              }
                            },
                            "description": "An identifier registration scheme for products, facilities, or organisations. Typically operated by a state, national or gloabl authority."
                          },
                          "TransformationEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "TransformationEvent",
                                  "Event"
                                ],
                                "default": [
                                  "TransformationEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "TransformationEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "outputEPCList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of uniquely identified items that are the output of this transformation event - for example a list of individually identified bolts of cloth that are the output of a weaving process."
                              },
                              "inputEPCList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of uniquely identified items that are the input of this transformation event - for example a list of individually identified bobbins of yarn that are the input of a weaving process."
                              },
                              "inputQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "The quantified list of product classes that are the input of this transformation event - used when each item does not have a unique identity.  for example the weight of raw cotton that is the input to a ginning process."
                              },
                              "outputQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "The quantified list of product classes that are the output of this transformation event - used when each item does not have a unique identity.  for example a count of the bales of cleaned cotton that are the output of a ginning process."
                              },
                              "processType": {
                                "example": "https://textileIndustry.org/spinning",
                                "type": "string",
                                "format": "uri",
                                "description": "An industry specific process type code.  "
                              }
                            },
                            "description": "Transformation represents an event in which input objects are fully or partially consumed and output objects are produced, such that any of the input objects may have contributed to all of the output objects - for example consuming bales of cotton to produce yarn."
                          },
                          "SensorElement": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "SensorElement"
                                ],
                                "default": [
                                  "SensorElement"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "SensorElement"
                                  ]
                                }
                              },
                              "sensorMetadata": {
                                "$ref": "#/$defs/Sensor",
                                "description": "Data that describes the physical sensor that recorded the sensor data set."
                              },
                              "sensorReport": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorData"
                                },
                                "description": "A list of sensor readings from the given sensor relevant to the traceability event context."
                              },
                              "sensorIntegrityProof": {
                                "type": "string",
                                "format": "uri",
                                "description": "An optional reference to a verifiable credential signed by the sensor device or device manufacturer that contains the digitally signed raw data associated with this sensor report."
                              }
                            },
                            "description": "A SensorElement is used to carry data related to an event that is captured one sensor such as an IoT device. Include one sensor property and an array of sensor data values."
                          },
                          "Sensor": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "Sensor"
                                ],
                                "default": [
                                  "Sensor"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Sensor"
                                  ]
                                }
                              },
                              "device": {
                                "$ref": "#/$defs/Item",
                                "description": "The device Identifier for the sensor as a URI (typically an EPC)"
                              },
                              "dataProcessingMethod": {
                                "example": "https://standards.org/sensorMethod#1234",
                                "type": "string",
                                "format": "uri",
                                "description": "The data processing method used by the sensor - should reference a documented standard criteria as a URI"
                              }
                            },
                            "description": "A physical sensor that records a sensor data set."
                          },
                          "Item": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "Item",
                                  "Entity"
                                ],
                                "default": [
                                  "Item",
                                  "Entity"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Item",
                                    "Entity"
                                  ]
                                }
                              },
                              "id": {
                                "example": "https://id.gs1.org/01/09520123456788/21/12345",
                                "type": "string",
                                "format": "uri",
                                "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                              },
                              "name": {
                                "example": "EV battery 300Ah.",
                                "type": "string",
                                "description": "The name of the product class to which the product item belongs.  "
                              },
                              "registeredId": {
                                "example": "90664869327",
                                "type": "string",
                                "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                              },
                              "idScheme": {
                                "$ref": "#/$defs/IdentifierScheme",
                                "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                              }
                            },
                            "description": "A specific serilaised trade item which is a type of a more generic product. Typically an SGTIN",
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "SensorData": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "SensorData"
                                ],
                                "default": [
                                  "SensorData"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "SensorData"
                                  ]
                                }
                              },
                              "time": {
                                "example": "2024-07-24T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "the timestamp at which the sensor reading was made."
                              },
                              "sensorType": {
                                "example": "https://samplesensors.com/model1234",
                                "type": "string",
                                "format": "uri",
                                "description": "the measurement type of the sensor reading, as a URI reference to a measurement method specification."
                              },
                              "value": {
                                "example": 25,
                                "type": "number",
                                "description": "the sensor reading"
                              },
                              "uom": {
                                "type": "string",
                                "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
                                "description": "the unit of measure for the sensor reading, drawn from UNECE rec20 code list.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
                              }
                            },
                            "description": "A data point read by a sensor."
                          },
                          "QuantityElement": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "QuantityElement"
                                ],
                                "default": [
                                  "QuantityElement"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "QuantityElement"
                                  ]
                                }
                              },
                              "product": {
                                "$ref": "#/$defs/Entity",
                                "description": "THe identifier of a product class (as opposed to a product instance) such as a GTIN code for a manufactured product."
                              },
                              "quantity": {
                                "example": 20,
                                "type": "number",
                                "description": "The numeric quantity of the product class (eg 100 kg of cotton)"
                              },
                              "uom": {
                                "type": "string",
                                "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
                                "description": "The unit of measure for the quantity value (eg Kg or meters etc) using the UNECE Rec 20 unit of measure codelist.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
                              }
                            },
                            "description": "The quantity element is used to define the quantities (eg 100), units of measure (eg Kg) and product class (eg GTIN or other class identifier) of products that are inputs or outputs or the subject of supply chain events.  ",
                            "required": [
                              "product",
                              "quantity"
                            ]
                          },
                          "ObjectEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "ObjectEvent",
                                  "Event"
                                ],
                                "default": [
                                  "ObjectEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "ObjectEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "epcList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "A list of uniquely identified items (eg specific items serial numbers or tagged shipments / packages) that are the focus of this object event.  "
                              },
                              "quantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "A quantified list of product classes (eg GS1 GTINs) that are the focus of this object event"
                              }
                            },
                            "description": "Object represents an event that happened to one or more physical or digital objects - such as an inspection or certification of a product or shipment. The physical objects may be identified either as specific items (eg a unique consignment number) or as a quantified amount of a product class (eg 100Kg of cotton yarn)"
                          },
                          "AggregationEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "AggregationEvent",
                                  "Event"
                                ],
                                "default": [
                                  "AggregationEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "AggregationEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "parentEPC": {
                                "$ref": "#/$defs/Item",
                                "description": "The unique item identifier that is the result of this aggregation. Typically a packaging ID used in shipments that represents a box/ pallet / container of contained items."
                              },
                              "childEPCs": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of child items that have been aggregated into the parent (or dis-aggregated from the parent). Maybe a list of package references (eg boxes on a pallet) or may be individual items (eg products in a box)."
                              },
                              "childQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "List of quantified product classes that have been aggregated into the parent.  Used whwn the child items do not have unique identifiers (eg 100 Kg of cotton bales)"
                              }
                            },
                            "description": "Aggregation represents an event that happened to one or more objects that are physically aggregated together (physically constrained to be in the same place at the same time, as when cases are aggregated to a pallet).  This event is also used to represent de-aggregation (eg unpacking) when businessStepCode is unpacking."
                          },
                          "TransactionEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "TransactionEvent",
                                  "Event"
                                ],
                                "default": [
                                  "TransactionEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "TransactionEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "sourceParty": {
                                "$ref": "#/$defs/Entity",
                                "description": "The source party for this supply chain transaction - typically the seller party"
                              },
                              "destinationParty": {
                                "$ref": "#/$defs/Entity",
                                "description": "The destination party for this supply chain transaction - typically the buyer party."
                              },
                              "bizTransaction": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BTT",
                                "description": "The document type representing the trade transaction drawn from the business transaction type vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BTT\n    "
                              },
                              "epcList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of uniquely identified trade items included in this supply chain transaction."
                              },
                              "quantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "List of quantified product classes that are included in this transaction.  Used when the trade items do not have unique identifiers (eg 100 reels of yarn)"
                              }
                            },
                            "description": "Transaction represents an event in which one or more objects become associated or disassociated with one or more identified business transactions - such as the purchase / shipment of goods between buyer and seller."
                          },
                          "AssociationEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "AssociationEvent",
                                  "Event"
                                ],
                                "default": [
                                  "AssociationEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "AssociationEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "parentEPC": {
                                "$ref": "#/$defs/Item",
                                "description": "The unique item identifier that is the parent of this association. Typically an assembled product ID such as a desktop computer that is built from the associated child components."
                              },
                              "childEPCs": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of child items that have been assembled to create the parent - for example the power supply or hard drive components of a desktop computer."
                              },
                              "childQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "List of quantified product classes that have been assembled into the parent.  Used when the child items do not have unique identifiers (eg brackets and screws used in the assembly of a desktop computer)"
                              }
                            },
                            "description": "The association event represents the assembly of child sub-components to create a parent assembled item. For example a desktop computer assembled from power supply, hard drive, and motherboard.  The association event is very similar in structure to the aggregation event but is used for physical assembly. An association event may represent a bill of materials used to assemble a  product whilst an aggregation event may represent a packing list or items for transport. "
                          },
                          "Event": {
                            "type": "object",
                            "oneOf": [
                              {
                                "$ref": "#/$defs/TransformationEvent"
                              },
                              {
                                "$ref": "#/$defs/ObjectEvent"
                              },
                              {
                                "$ref": "#/$defs/AggregationEvent"
                              },
                              {
                                "$ref": "#/$defs/TransactionEvent"
                              },
                              {
                                "$ref": "#/$defs/AssociationEvent"
                              }
                            ],
                            "description": "This abstract event structure provides a common language to describe supply chain events such as shipments, inspections, manufacturing processes, etc. There are four types of EPCIS event but this is an abstract class representing all common properties of an EPCIS event.  "
                          }
                        }	
                      }
                    },
                    "constructData": {
                      "mappingFields": [
                        {
                          "sourcePath": "/linkResolver",
                          "destinationPath": "/id"
                        },
                        {
                          "sourcePath": "/linkResolver",
                          "destinationPath": "/epcList/index/id"
                        },
                        {
                          "sourcePath": "/vc/credentialSubject/registeredId",
                          "destinationPath": "/epcList/index/registeredId"
                        },
                        {
                          "sourcePath": "/vc/credentialSubject/name",
                          "destinationPath": "/epcList/index/name"
                        }
                      ],
                      "dummyFields": [
                        {
                          "path": "/action",
                          "data": "observe"
                        },
                        {
                          "path": "/bizLocation",
                          "data": "https://id.gs1.org/01/09354441000299"
                        },
                        {
                          "path": "/sourceParty",
                          "data": {
                            "id": "https://id.gs1.org/414/09354441099972",
                            "name": "Orchard",
                            "idScheme": 
                              {
                                "type": ["IdentifierScheme"],
                                "id": "https://id.gs1.org/414/",
                                "name": "Global Location Number (GLN)"
                              }
                          }
                        },
                        {
                          "path": "/destinationParty",
                          "data": {
                            "id": "https://id.gs1.org/414/09349728099912",
                            "name": "Orchard",
                            "idScheme": 
                              {
                                "type": ["IdentifierScheme"],
                                "id": "https://id.gs1.org/414/",
                                "name": "Global Location Number (GLN)"
                              }
                          }
                        }
                      ],
                      "generationFields": [
                        {
                          "path": "/eventTime",
                          "handler": "generateCurrentDatetime"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "CustomButton",
              "type": "Submit",
              "props": {
                "includeDownload": true,
                "downloadFileName": "transaction"
              }
            }
          ],
          "services": [
            {
              "name": "processTransactionEvent",
              "parameters": [
                {
                  "vckit": {
                    "vckitAPIUrl": "http://localhost:3332/v1",
                    "issuer": "did:web:wallaby-trusty-crow.ngrok-free.app"
                  },
                  "epcisTransactionEvent": {
                    "context": ["https://test.uncefact.org/vocabulary/untp/dte/0.3.10/"],
                    "renderTemplate": [
                    ],
                    "type": ["TransactionEventCredential"],
                    "dlrLinkTitle": "Transaction Event",
                    "dlrIdentificationKeyNamespace": "gs1",
                    "dlrIdentificationKeyType": "gtin",
                    "dlrVerificationPage": "http://localhost:3003/verify"
                  },
                  "dlr": {
                    "dlrAPIUrl": "http://localhost:3000",
                    "dlrAPIKey": "test123",
                    "namespace": "gs1"
                  },
                  "storage": {
                    "url": "http://localhost:3334/v1/documents",
                    "params": {
                      "resultPath": "/uri",
                      "bucket": "verifiable-credentials"
                    },
                    "options": {
                      "method": "POST",
                      "headers": {
                        "Content-Type": "application/json"
                      }
                    }
                  },
                  "identifierKeyPath": "/epcList/0/registeredId",
                  "localStorageParams": { "storageKey": "orchard_dpps", "keyPath": "/epcList/0/registeredId" }
                }
              ]
            }
          ]
        },
        {
          "name": "Transfer Event",
          "id": "transaction_product",
          "components": [
            {
              "name": "LocalStorageLoader",
              "type": "EntryData",
              "props": {
                "storageKey": "orchard_dpps",
                "nestedComponents": [
                  {
                    "name": "JsonForm",
                    "type": "EntryData",
                    "props": {
                      "schema": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": "array",
                            "readOnly": true,
                            "const": [
                              "TransactionEvent",
                              "Event"
                            ],
                            "default": [
                              "TransactionEvent",
                              "Event"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "TransactionEvent",
                                "Event"
                              ]
                            }
                          },
                          "id": {
                            "readOnly": false,
                            "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                            "type": "string",
                            "format": "uri",
                            "description": "The unique identifier of this event - SHOULD be a UUID"
                          },
                          "eventTime": {
                            "example": "2024-09-01T12:00:00",
                            "type": "string",
                            "format": "date-time",
                            "description": "The ISO-8601 date time when the event occurred."
                          },
                          "action": {
                            "type": "string",
                            "enum": [
                              "observe",
                              "add",
                              "delete"
                            ],
                            "example": "observe",
                            "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                          },
                          "disposition": {
                            "type": "string",
                            "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                            "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                          },
                          "bizStep": {
                            "type": "string",
                            "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                            "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                          },
                          "bizLocation": {
                            "example": "https://id.gs1.org/414/9520123456788",
                            "type": "string",
                            "format": "uri",
                            "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                          },
                          "sensorElementList": {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/SensorElement"
                            },
                            "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                          },
                          "sourceParty": {
                            "$ref": "#/$defs/Entity",
                            "description": "The source party for this supply chain transaction - typically the seller party"
                          },
                          "destinationParty": {
                            "$ref": "#/$defs/Entity",
                            "description": "The destination party for this supply chain transaction - typically the buyer party."
                          },
                          "bizTransaction": {
                            "type": "string",
                            "x-external-enumeration": "https://ref.gs1.org/cbv/BTT",
                            "description": "The document type representing the trade transaction drawn from the business transaction type vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BTT\n    "
                          },
                          "epcList": {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/Item"
                            },
                            "description": "The list of uniquely identified trade items included in this supply chain transaction."
                          },
                          "quantityList": {
                            "type": "array",
                            "items": {
                              "$ref": "#/$defs/QuantityElement"
                            },
                            "description": "List of quantified product classes that are included in this transaction.  Used when the trade items do not have unique identifiers (eg 100 reels of yarn)"
                          }
                        },
                        "description": "Transaction represents an event in which one or more objects become associated or disassociated with one or more identified business transactions - such as the purchase / shipment of goods between buyer and seller.",
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "$defs": {
                          "CredentialIssuer": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "CredentialIssuer"
                                ],
                                "default": [
                                  "CredentialIssuer"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "CredentialIssuer"
                                  ]
                                }
                              },
                              "id": {
                                "example": "did:web:identifiers.example-company.com:12345",
                                "type": "string",
                                "format": "uri",
                                "description": "The W3C DID of the issuer - should be a did:web or did:tdw"
                              },
                              "name": {
                                "example": "Example Company Pty Ltd",
                                "type": "string",
                                "description": "The name of the issuer person or organisation"
                              },
                              "otherIdentifiers": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Entity"
                                },
                                "description": "An optional list of other registered identifiers for this credential issuer "
                              }
                            },
                            "description": "The issuer party ()person or orgnaition) of a verifiable credential.",
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "Entity": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "Entity"
                                ],
                                "default": [
                                  "Entity"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Entity"
                                  ]
                                }
                              },
                              "id": {
                                "example": "https://id.gs1.org/01/09520123456788/21/12345",
                                "type": "string",
                                "format": "uri",
                                "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                              },
                              "name": {
                                "example": "EV battery 300Ah.",
                                "type": "string",
                                "description": "The registered name of the entity within the identifier scheme.  Examplesproduct - EV battery 300Ahparty - Sample Company Pty Ltd. facility - Greenacres battery factory"
                              },
                              "registeredId": {
                                "example": "90664869327",
                                "type": "string",
                                "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                              },
                              "idScheme": {
                                "$ref": "#/$defs/IdentifierScheme",
                                "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                              }
                            },
                            "description": "The ID and Name of an identified entity such qs a product, facility, party, standard, etc.  If the identifier is a W3C DID then the corresponding DID document SHOULD include a serviceEndpoint of type \"IdentityResolver\". If the identifier is not a W3C DID then the id peroperty SHOULD be an identity resolver URL.",
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "IdentifierScheme": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "IdentifierScheme"
                                ],
                                "default": [
                                  "IdentifierScheme"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "IdentifierScheme"
                                  ]
                                }
                              },
                              "id": {
                                "example": "https://id.gs1.org/01/",
                                "type": "string",
                                "format": "uri",
                                "description": "The globally unique identifier of the registration scheme. The scheme should be registered and discoverable from vocabulary.uncefact.org/identifierSchemes"
                              },
                              "name": {
                                "example": "Global Trade Identification Number (GTIN)",
                                "type": "string",
                                "description": "The name of the identifier scheme. "
                              }
                            },
                            "description": "An identifier registration scheme for products, facilities, or organisations. Typically operated by a state, national or gloabl authority."
                          },
                          "TransformationEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "TransformationEvent",
                                  "Event"
                                ],
                                "default": [
                                  "TransformationEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "TransformationEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "outputEPCList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of uniquely identified items that are the output of this transformation event - for example a list of individually identified bolts of cloth that are the output of a weaving process."
                              },
                              "inputEPCList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of uniquely identified items that are the input of this transformation event - for example a list of individually identified bobbins of yarn that are the input of a weaving process."
                              },
                              "inputQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "The quantified list of product classes that are the input of this transformation event - used when each item does not have a unique identity.  for example the weight of raw cotton that is the input to a ginning process."
                              },
                              "outputQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "The quantified list of product classes that are the output of this transformation event - used when each item does not have a unique identity.  for example a count of the bales of cleaned cotton that are the output of a ginning process."
                              },
                              "processType": {
                                "example": "https://textileIndustry.org/spinning",
                                "type": "string",
                                "format": "uri",
                                "description": "An industry specific process type code.  "
                              }
                            },
                            "description": "Transformation represents an event in which input objects are fully or partially consumed and output objects are produced, such that any of the input objects may have contributed to all of the output objects - for example consuming bales of cotton to produce yarn."
                          },
                          "SensorElement": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "SensorElement"
                                ],
                                "default": [
                                  "SensorElement"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "SensorElement"
                                  ]
                                }
                              },
                              "sensorMetadata": {
                                "$ref": "#/$defs/Sensor",
                                "description": "Data that describes the physical sensor that recorded the sensor data set."
                              },
                              "sensorReport": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorData"
                                },
                                "description": "A list of sensor readings from the given sensor relevant to the traceability event context."
                              },
                              "sensorIntegrityProof": {
                                "type": "string",
                                "format": "uri",
                                "description": "An optional reference to a verifiable credential signed by the sensor device or device manufacturer that contains the digitally signed raw data associated with this sensor report."
                              }
                            },
                            "description": "A SensorElement is used to carry data related to an event that is captured one sensor such as an IoT device. Include one sensor property and an array of sensor data values."
                          },
                          "Sensor": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "Sensor"
                                ],
                                "default": [
                                  "Sensor"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Sensor"
                                  ]
                                }
                              },
                              "device": {
                                "$ref": "#/$defs/Item",
                                "description": "The device Identifier for the sensor as a URI (typically an EPC)"
                              },
                              "dataProcessingMethod": {
                                "example": "https://standards.org/sensorMethod#1234",
                                "type": "string",
                                "format": "uri",
                                "description": "The data processing method used by the sensor - should reference a documented standard criteria as a URI"
                              }
                            },
                            "description": "A physical sensor that records a sensor data set."
                          },
                          "Item": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "Item",
                                  "Entity"
                                ],
                                "default": [
                                  "Item",
                                  "Entity"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Item",
                                    "Entity"
                                  ]
                                }
                              },
                              "id": {
                                "example": "https://id.gs1.org/01/09520123456788/21/12345",
                                "type": "string",
                                "format": "uri",
                                "description": "The globally unique ID of the entity as a resolvable URL according to ISO 18975. ExamplesProduct - id.gs1.org/01/09520123456788/21/12345  Party - abr.business.gov.au/ABN/View?abn=90664869327. Facility - did:web:facilities.example-company.com:123. "
                              },
                              "name": {
                                "example": "EV battery 300Ah.",
                                "type": "string",
                                "description": "The name of the product class to which the product item belongs.  "
                              },
                              "registeredId": {
                                "example": "90664869327",
                                "type": "string",
                                "description": "The registration number (alphanumeric) of the entity within the register. Unique within the register."
                              },
                              "idScheme": {
                                "$ref": "#/$defs/IdentifierScheme",
                                "description": "The identifier scheme.  Exampleproduct - id.gs1.org/01. party - business.gov.au/abn  facility - did:web:facilities.acme.com. "
                              }
                            },
                            "description": "A specific serilaised trade item which is a type of a more generic product. Typically an SGTIN",
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "SensorData": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "SensorData"
                                ],
                                "default": [
                                  "SensorData"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "SensorData"
                                  ]
                                }
                              },
                              "time": {
                                "example": "2024-07-24T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "the timestamp at which the sensor reading was made."
                              },
                              "sensorType": {
                                "example": "https://samplesensors.com/model1234",
                                "type": "string",
                                "format": "uri",
                                "description": "the measurement type of the sensor reading, as a URI reference to a measurement method specification."
                              },
                              "value": {
                                "example": 25,
                                "type": "number",
                                "description": "the sensor reading"
                              },
                              "uom": {
                                "type": "string",
                                "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
                                "description": "the unit of measure for the sensor reading, drawn from UNECE rec20 code list.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
                              }
                            },
                            "description": "A data point read by a sensor."
                          },
                          "QuantityElement": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "QuantityElement"
                                ],
                                "default": [
                                  "QuantityElement"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "QuantityElement"
                                  ]
                                }
                              },
                              "product": {
                                "$ref": "#/$defs/Entity",
                                "description": "THe identifier of a product class (as opposed to a product instance) such as a GTIN code for a manufactured product."
                              },
                              "quantity": {
                                "example": 20,
                                "type": "number",
                                "description": "The numeric quantity of the product class (eg 100 kg of cotton)"
                              },
                              "uom": {
                                "type": "string",
                                "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode",
                                "description": "The unit of measure for the quantity value (eg Kg or meters etc) using the UNECE Rec 20 unit of measure codelist.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode\n    "
                              }
                            },
                            "description": "The quantity element is used to define the quantities (eg 100), units of measure (eg Kg) and product class (eg GTIN or other class identifier) of products that are inputs or outputs or the subject of supply chain events.  ",
                            "required": [
                              "product",
                              "quantity"
                            ]
                          },
                          "ObjectEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "ObjectEvent",
                                  "Event"
                                ],
                                "default": [
                                  "ObjectEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "ObjectEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "epcList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "A list of uniquely identified items (eg specific items serial numbers or tagged shipments / packages) that are the focus of this object event.  "
                              },
                              "quantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "A quantified list of product classes (eg GS1 GTINs) that are the focus of this object event"
                              }
                            },
                            "description": "Object represents an event that happened to one or more physical or digital objects - such as an inspection or certification of a product or shipment. The physical objects may be identified either as specific items (eg a unique consignment number) or as a quantified amount of a product class (eg 100Kg of cotton yarn)"
                          },
                          "AggregationEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "AggregationEvent",
                                  "Event"
                                ],
                                "default": [
                                  "AggregationEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "AggregationEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "parentEPC": {
                                "$ref": "#/$defs/Item",
                                "description": "The unique item identifier that is the result of this aggregation. Typically a packaging ID used in shipments that represents a box/ pallet / container of contained items."
                              },
                              "childEPCs": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of child items that have been aggregated into the parent (or dis-aggregated from the parent). Maybe a list of package references (eg boxes on a pallet) or may be individual items (eg products in a box)."
                              },
                              "childQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "List of quantified product classes that have been aggregated into the parent.  Used whwn the child items do not have unique identifiers (eg 100 Kg of cotton bales)"
                              }
                            },
                            "description": "Aggregation represents an event that happened to one or more objects that are physically aggregated together (physically constrained to be in the same place at the same time, as when cases are aggregated to a pallet).  This event is also used to represent de-aggregation (eg unpacking) when businessStepCode is unpacking."
                          },
                          "TransactionEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "TransactionEvent",
                                  "Event"
                                ],
                                "default": [
                                  "TransactionEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "TransactionEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "sourceParty": {
                                "$ref": "#/$defs/Entity",
                                "description": "The source party for this supply chain transaction - typically the seller party"
                              },
                              "destinationParty": {
                                "$ref": "#/$defs/Entity",
                                "description": "The destination party for this supply chain transaction - typically the buyer party."
                              },
                              "bizTransaction": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BTT",
                                "description": "The document type representing the trade transaction drawn from the business transaction type vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BTT\n    "
                              },
                              "epcList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of uniquely identified trade items included in this supply chain transaction."
                              },
                              "quantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "List of quantified product classes that are included in this transaction.  Used when the trade items do not have unique identifiers (eg 100 reels of yarn)"
                              }
                            },
                            "description": "Transaction represents an event in which one or more objects become associated or disassociated with one or more identified business transactions - such as the purchase / shipment of goods between buyer and seller."
                          },
                          "AssociationEvent": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "type": {
                                "type": "array",
                                "readOnly": true,
                                "const": [
                                  "AssociationEvent",
                                  "Event"
                                ],
                                "default": [
                                  "AssociationEvent",
                                  "Event"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "AssociationEvent",
                                    "Event"
                                  ]
                                }
                              },
                              "id": {
                                "readOnly": true,
                                "example": "https://events.sample.com/b681df10-c682-454a-b11b-d0b9374c01bd",
                                "type": "string",
                                "format": "uri",
                                "description": "The unique identifier of this event - SHOULD be a UUID"
                              },
                              "eventTime": {
                                "example": "2024-09-01T12:00:00",
                                "type": "string",
                                "format": "date-time",
                                "description": "The ISO-8601 date time when the event occurred."
                              },
                              "action": {
                                "type": "string",
                                "enum": [
                                  "observe",
                                  "add",
                                  "delete"
                                ],
                                "example": "observe",
                                "description": "Code describing how an event relates to the lifecycle of the entity impacted by the event."
                              },
                              "disposition": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/Disp",
                                "description": "Disposition code describing the state of the item after the event. \n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/Disp\n    "
                              },
                              "bizStep": {
                                "type": "string",
                                "x-external-enumeration": "https://ref.gs1.org/cbv/BizStep",
                                "description": "A business step code drawn from a controlled vocabulary.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://ref.gs1.org/cbv/BizStep\n    "
                              },
                              "bizLocation": {
                                "example": "https://id.gs1.org/414/9520123456788",
                                "type": "string",
                                "format": "uri",
                                "description": "A Business Location is a uniquely identified and discretely recorded geospatial location that is meant to designate the specific place where an object is assumed to be following an EPCIS event until it is reported to be at a different Business Location by a subsequent EPCIS event. The bizLocation must be a resolvable URI that links to facility information and geolocation data."
                              },
                              "sensorElementList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/SensorElement"
                                },
                                "description": "An array (one for each sensor) of sensor device data sets associated with the event. "
                              },
                              "parentEPC": {
                                "$ref": "#/$defs/Item",
                                "description": "The unique item identifier that is the parent of this association. Typically an assembled product ID such as a desktop computer that is built from the associated child components."
                              },
                              "childEPCs": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/Item"
                                },
                                "description": "The list of child items that have been assembled to create the parent - for example the power supply or hard drive components of a desktop computer."
                              },
                              "childQuantityList": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/QuantityElement"
                                },
                                "description": "List of quantified product classes that have been assembled into the parent.  Used when the child items do not have unique identifiers (eg brackets and screws used in the assembly of a desktop computer)"
                              }
                            },
                            "description": "The association event represents the assembly of child sub-components to create a parent assembled item. For example a desktop computer assembled from power supply, hard drive, and motherboard.  The association event is very similar in structure to the aggregation event but is used for physical assembly. An association event may represent a bill of materials used to assemble a  product whilst an aggregation event may represent a packing list or items for transport. "
                          },
                          "Event": {
                            "type": "object",
                            "oneOf": [
                              {
                                "$ref": "#/$defs/TransformationEvent"
                              },
                              {
                                "$ref": "#/$defs/ObjectEvent"
                              },
                              {
                                "$ref": "#/$defs/AggregationEvent"
                              },
                              {
                                "$ref": "#/$defs/TransactionEvent"
                              },
                              {
                                "$ref": "#/$defs/AssociationEvent"
                              }
                            ],
                            "description": "This abstract event structure provides a common language to describe supply chain events such as shipments, inspections, manufacturing processes, etc. There are four types of EPCIS event but this is an abstract class representing all common properties of an EPCIS event.  "
                          }
                        }	
                      }
                    },
                    "constructData": {
                      "mappingFields": [
                        {
                          "sourcePath": "/linkResolver",
                          "destinationPath": "/id"
                        },
                        {
                          "sourcePath": "/linkResolver",
                          "destinationPath": "/epcList/index/id"
                        },
                        {
                          "sourcePath": "/vc/credentialSubject/registeredId",
                          "destinationPath": "/epcList/index/registeredId"
                        },
                        {
                          "sourcePath": "/vc/credentialSubject/name",
                          "destinationPath": "/epcList/index/name"
                        }
                      ],
                      "dummyFields": [
                        {
                          "path": "/action",
                          "data": "observe"
                        },
                        {
                          "path": "/bizLocation",
                          "data": "https://id.gs1.org/01/09354441000299"
                        },
                        {
                          "path": "/sourceParty",
                          "data": {
                            "id": "https://id.gs1.org/414/09354441099972",
                            "name": "Orchard",
                            "idScheme": 
                              {
                                "type": ["IdentifierScheme"],
                                "id": "https://id.gs1.org/414/",
                                "name": "Global Location Number (GLN)"
                              }
                          }
                        },
                        {
                          "path": "/destinationParty",
                          "data": {
                            "id": "https://id.gs1.org/414/09349728099912",
                            "name": "Orchard",
                            "idScheme": 
                              {
                                "type": ["IdentifierScheme"],
                                "id": "https://id.gs1.org/414/",
                                "name": "Global Location Number (GLN)"
                              }
                          }
                        }
                      ],
                      "generationFields": [
                        {
                          "path": "/eventTime",
                          "handler": "generateCurrentDatetime"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "CustomButton",
              "type": "Submit",
              "props": {
                "includeDownload": true,
                "downloadFileName": "transaction"
              }
            }
          ],
          "services": [
            {
              "name": "processTransactionEvent",
              "parameters": [
                {
                  "vckit": {
                    "vckitAPIUrl": "http://localhost:3332/v1",
                    "issuer": "did:web:wallaby-trusty-crow.ngrok-free.app"
                  },
                  "epcisTransactionEvent": {
                    "context": ["https://test.uncefact.org/vocabulary/untp/dte/0.3.10/"],
                    "renderTemplate": [
                    ],
                    "type": ["TransactionEventCredential"],
                    "dlrLinkTitle": "Transaction Event",
                    "dlrIdentificationKeyNamespace": "gs1",
                    "dlrIdentificationKeyType": "gtin",
                    "dlrVerificationPage": "http://localhost:3003/verify"
                  },
                  "dlr": {
                    "dlrAPIUrl": "http://localhost:3000",
                    "dlrAPIKey": "test123",
                    "namespace": "gs1"
                  },
                  "storage": {
                    "url": "http://localhost:3334/v1/documents",
                    "params": {
                      "resultPath": "/uri",
                      "bucket": "verifiable-credentials"
                    },
                    "options": {
                      "method": "POST",
                      "headers": {
                        "Content-Type": "application/json"
                      }
                    }
                  },
                  "identifierKeyPath": "/epcList/0/registeredId",
                  "localStorageParams": { "storageKey": "orchard_dpps", "keyPath": "/epcList/0/registeredId" }
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "identifyProvider": {
    "type": "gs1",
    "url": "http://localhost:3001/gs1"
  },
  "defaultVerificationServiceLink": {
    "title": "Default Verification Service",
    "context": "Default Verification Service",
    "type": "application/json",
    "href": "http://localhost:3332/agent/routeVerificationCredential",
    "hreflang": [
      "en"
    ],
    "apiKey": "test123"
  }
}
